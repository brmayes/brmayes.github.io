{"version":3,"sources":["Components/_metadata.js","Components/Sidebar.js","Components/Posts.js","Components/_utils.js","Components/About.js","Components/Content.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","title","baseurl","email","profilePicture","highlighter","markdown","Sidebar","props","setContentType","className","alt","metadata","src","href","onClick","target","projects","data","map","d","post","key","str","replace","toLowerCase","url","img","includes","date","role","desc","makeProject","About","class","require","Content","contentType","filteredData","filter","include","Posts","App","useState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.879d5b42.chunk.js","sourcesContent":["module.exports = {\n\ttitle: \"Brittany Renee Mayes\",\n\tbaseurl: \"brmayes.github.io\",\n\temail: \"brittany.mayes@washpost.com\",\n\tprofilePicture: \"mayesb.jpg\",\n\thighlighter: \"rouge\",\n\tmarkdown: \"kramdown\",\n};\n","import React from \"react\";\nimport * as metadata from \"./_metadata.js\";\n\nconst Sidebar = (props) => {\n\tconst { setContentType } = props;\n\n\treturn (\n\t\t<div className=\"flex-item sidebar\">\n\t\t\t<img\n\t\t\t\tclassName=\"profile-picture\"\n\t\t\t\talt={metadata.title}\n\t\t\t\tsrc={\"../img/\" + metadata.profilePicture}\n\t\t\t/>\n\t\t\t<h1 className=\"headline\">\n\t\t\t\t{metadata.title}&nbsp;\n\t\t\t\t<i className=\"em em-sunflower\"></i>\n\t\t\t</h1>\n\t\t\t<div className=\"nav links\">\n\t\t\t\t<a href=\"#\" onClick={() => setContentType(\"work\")}>\n\t\t\t\t\tWork\n\t\t\t\t</a>\n\t\t\t\t<a href=\"#\" onClick={() => setContentType(\"about\")}>\n\t\t\t\t\tAbout\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t\t<div className=\"nav social\">\n\t\t\t\t<a href=\"http://twitter.com/BritRenee_\" target=\"_blank\">\n\t\t\t\t\t<i className=\"ion-social-twitter\"></i>\n\t\t\t\t</a>\n\t\t\t\t<a\n\t\t\t\t\thref=\"https://www.washingtonpost.com/people/brittany-renee-mayes/\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t>\n\t\t\t\t\t<i className=\"ion-ios-briefcase\"></i>\n\t\t\t\t</a>\n\t\t\t\t<a href=\"http://github.com/brmayes\" target=\"_blank\">\n\t\t\t\t\t<i className=\"ion-social-github\"></i>\n\t\t\t\t</a>\n\t\t\t\t<a href=\"mailto:brittany.mayes@washpost.com\" target=\"_blank\">\n\t\t\t\t\t<i className=\"ion-paper-airplane\"></i>\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport { slugify } from \"./_utils.js\";\n\nconst Sidebar = (props) => {\n\tconst { data } = props;\n\n\tfunction makeProject(post) {\n\t\treturn (\n\t\t\t<div className=\"post\" key={slugify(post.title)}>\n\t\t\t\t<a className=\"headline-link\" href={post.url} target=\"_blank\">\n\t\t\t\t\t<h3>{post.title}</h3>\n\t\t\t\t</a>\n\t\t\t\t<div className=\"img-wrapper\">\n\t\t\t\t\t<img\n\t\t\t\t\t\talt={post.title}\n\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\tpost.img.includes(\"http\")\n\t\t\t\t\t\t\t\t? post.img\n\t\t\t\t\t\t\t\t: \"./img/thumbnails/\" + post.img\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"meta-wrapper\">\n\t\t\t\t\t<p className=\"description\">{post.date}</p>\n\t\t\t\t\t<p className=\"description\">{post.role}</p>\n\t\t\t\t\t<p className=\"description\">{post.desc}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tconst projects = data.map((d) => makeProject(d));\n\n\treturn <div className=\"post-container\">{projects}</div>;\n};\n\nexport default Sidebar;\n","/**\n * Takes a string and makes it a slug.\n *\n * @param {string} str - the string to be slugified\n * @returns {string} string like 'world' or 'world-of-dogs' or 'world-and-dogs'\n */\nexport const slugify = (str) => {\n\treturn str\n\t\t.replace(/[,.]/g, \"\")\n\t\t.replace(/&/g, \"and\")\n\t\t.replace(/\\//g, \"\")\n\t\t.replace(/\\s/g, \"-\")\n\t\t.toLowerCase();\n};\n","import React from \"react\";\n\nconst About = (props) => {\n\t// const { data } = props;\n\n\treturn (\n\t\t<div class=\"about\">\n\t\t\t<p class=\"about-intro\">Hi there, I'm Brittany.</p>\n\n\t\t\t<p>\n\t\t\t\tI'm a <strong>graphics reporter</strong> at the{\" \"}\n\t\t\t\t<strong>Washington Post</strong>. I am also an adjunct professor\n\t\t\t\tat <strong>The University of Maryland, College Park</strong>. I\n\t\t\t\twas raised by NPR Visuals, and I'm an alumna of the beautiful\n\t\t\t\tUniversity of North Carolina at Chapel Hill.\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\tRecently, I've been thinking about: Processes, aspirational\n\t\t\t\tskills, fostering collaboration, hiring and organizational\n\t\t\t\thierarchy. Talk to me about any of these!\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\tIf you'd like, you can take a look at my{\" \"}\n\t\t\t\t<a href=\"/img/MayesResume.pdf\">resume</a>.\n\t\t\t</p>\n\n\t\t\t<h3>Skills</h3>\n\t\t\t<ul>\n\t\t\t\t<li>HTML and CSS</li>\n\t\t\t\t<li>Less and Sass</li>\n\t\t\t\t<li>JavaScript and jQuery</li>\n\t\t\t\t<li>D3.js</li>\n\t\t\t\t<li>Python</li>\n\t\t\t\t<li>Data analysis</li>\n\t\t\t\t<li>Jupyter Notebook and Pandas</li>\n\t\t\t\t<li>QGIS</li>\n\t\t\t\t<li>Illustrator and Photoshop</li>\n\t\t\t\t<li>Git version control</li>\n\t\t\t</ul>\n\n\t\t\t<h3>Community Involvement</h3>\n\t\t\t<ul>\n\t\t\t\t<li>Press Pass Mentorship Program</li>\n\t\t\t\t<li>Girls Who Code</li>\n\t\t\t\t<li>Investigative Reporters and Editors</li>\n\t\t\t\t<li>National Association of Black Journalists</li>\n\t\t\t\t<li>NICAR Minority Fellowship Program</li>\n\t\t\t\t<li>Online News Association Student Newsroom Mentor</li>\n\t\t\t\t<li>ProPublica's Diversity Mentorship Program</li>\n\t\t\t</ul>\n\n\t\t\t<h3>Awards and Recognition</h3>\n\t\t\t<ul>\n\t\t\t\t<li>2018 DCFemTech Award, Data</li>\n\t\t\t\t<li>\n\t\t\t\t\t2016 Stuart Sechriest Award for Outstanding Graduating\n\t\t\t\t\tSenior, Visual Communication\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t2016 Excellence and Innovation in Visual Digital\n\t\t\t\t\tStorytelling, Online Journalism Awards\n\t\t\t\t</li>\n\t\t\t</ul>\n\n\t\t\t<p>That was a little about me. I'd love to hear from you.</p>\n\t\t</div>\n\t);\n};\n\nexport default About;\n","import React from \"react\";\nimport Posts from \"./Posts\";\nimport About from \"./About\";\n\nconst data = require(\"../data/projects.json\");\n\nconst Content = (props) => {\n\tconst { contentType } = props;\n\n\tconst filteredData = data.filter((d) => d.include === \"TRUE\");\n\n\treturn (\n\t\t<div className=\"flex-item main\">\n\t\t\t{contentType === \"work\" ? <Posts data={filteredData} /> : <About />}\n\t\t</div>\n\t);\n};\n\nexport default Content;\n","import React, { useState } from \"react\";\nimport Sidebar from \"./Components/Sidebar\";\nimport Content from \"./Components/Content\";\nimport \"./scss/App.scss\";\n\nfunction App() {\n\tconst [contentType, setContentType] = useState(\"work\");\n\treturn (\n\t\t<div className=\"flex-container\">\n\t\t\t<Sidebar setContentType={setContentType} />\n\t\t\t<Content contentType={contentType} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}